<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jon Mathai</title>
    <description>Optimistic Idealist</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 27 Sep 2020 14:01:03 -0400</pubDate>
    <lastBuildDate>Sun, 27 Sep 2020 14:01:03 -0400</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>A Syllabus For Learning Python</title>
        <description>&lt;p&gt;So recently I’ve gotten many questions from friends and other people on how to learn to code.
Below is an email I sent to a friend that asked me about some tips on learning Python for research when he’s in medical school. Hopefully it can help someone else too.&lt;/p&gt;

&lt;p&gt;If you want to really just get started trying to learn the language without downloading anything you could also use this website https://repl.it/languages/python3.&lt;/p&gt;

&lt;p&gt;However I &lt;em&gt;HIGHLY&lt;/em&gt; recommend downloading necessary software before trying to learn because it will be much more helpful.&lt;/p&gt;

&lt;p&gt;Like I said before I believe the best way to learn programming is by writing code for some programming projects. Start with very small projects first then slowly increase their complexity. I think also working on projects that seem cool or fun is also helpful during this (there’s less friction for you to work on them). To provide a sample roadmap of what some of those projects may look like this one&lt;/p&gt;

&lt;p&gt;Week 1: Data types, variables, if statements
Possible projects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;make a simple calculator. The program asks the user for two inputs and an operation (add, subtract, multiply, divide, exponentiate, etc) and you print out the result to the screen.&lt;/li&gt;
  &lt;li&gt;write a basic text adventure game.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Week 2: Loops, Functions, Strings
Possible projects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Write a program called fizzbuzz. This is a program that will take in a number (n) as input to the program. It will go through all the numbers up to n and if the number is divisible by 3 print out fizz, if divisible by 5 print out buzz, if divisible by both print out fizz buzz or otherwise just print out the number and each number should be on a separate line.&lt;/li&gt;
  &lt;li&gt;make a slightly more complex text adventure game&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Week 3: Importing libraries, file I/O, Lists/Arrays&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;now you can start to do a little more complex things
Possible projects:&lt;/li&gt;
  &lt;li&gt;Write a program that will count how many files are in a folder/directory and print out the result&lt;/li&gt;
  &lt;li&gt;read through a text file and print out every third line, write every second line to a different file.&lt;/li&gt;
  &lt;li&gt;look up a library online that you could use to automate a task on your computer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Week 4: Classes and Objects
Possible projects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;you could continue to work on a text adventure game (I don’t know why I keep suggesting it but I think it’s a good learning tool and they can be fun)&lt;/li&gt;
  &lt;li&gt;Make a simple email inventory system and model them through classes (things like how would you represent an email account as a class and how would you represent a message as a class)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Week 5: HTTP requests and API things
Possible projects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;use the pokemon api to print out stats on some group of pokemon&lt;/li&gt;
  &lt;li&gt;look up an api you find interesting and use it for some project. There are a bunch of really random and cool API’s out there so just gotta google around for them to find one you think is cool&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now the schedule I proposed is just a sample one and may not be at the pace you’d prefer. So pick a schedule you think would work best for you and work around that. I do think though a good setup is to review a few concepts throughout the week and review that knowledge through a project of your own design. So aim to review concepts and do around 1-2 projects a week, these projects can vary in scope too!&lt;/p&gt;

&lt;p&gt;You’re probably going to need to google around a bunch to figure out stuff which is good and necessary. Stackoverflow is your friend too. One thing I’d recommend is that when you find some code online that can help, don’t copy and paste, make sure to copy the code over by typing it out. It’s a small nitpick but I think it gives you more of a chance to think about the code you’re writing. So definitely google around when you need to find something out but make sure to understand the code that you use.&lt;/p&gt;

&lt;p&gt;Here are some links to some libraries, software, and resources you may find helpful or interesting.&lt;/p&gt;

&lt;p&gt;Library for computational biology programs         –&amp;gt;                                         https://biopython.org/ &lt;br /&gt;
Bioinformatics problem sets                                 –&amp;gt;                                         http://rosalind.info/ &lt;br /&gt;
Library for making HTTP requests                       –&amp;gt;                                         https://requests.readthedocs.io/en/master/ &lt;br /&gt;
Library for making web applications                     –&amp;gt;                                         http://flask.pocoo.org/ &lt;br /&gt;
Library for numerical / scientific computing          –&amp;gt;                                         https://wiki.python.org/moin/numpy &lt;br /&gt;
Library for developing some games                     –&amp;gt;                                         http://www.pygame.org/ &lt;br /&gt;
Pokemon API because why not bro                     –&amp;gt;                                         https://pokeapi.co/ &lt;br /&gt;
A text editor used in scientific computing             –&amp;gt;                                         https://jupyter.org/ &lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;one note: Jupyter notebook is pretty nice but I would definitely recommend only downloading it after you’ve had some experience with python. Just get used to writing python in atom and running it through the terminal (like cmd or git bash for now).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So that’s most of the things and you can always ask me questions at any time so just let me know if you have questions on something.&lt;/p&gt;

&lt;p&gt;Also download pip                                                 –&amp;gt;                                       https://pip.pypa.io/en/stable/ &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;It will be pretty helpful when you start using other libraries.&lt;/p&gt;

&lt;p&gt;Anyway let me know if you have any questions.))))))&lt;/p&gt;
</description>
        <pubDate>Sat, 25 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2020/07/25/Learning-Python-Syllabus.html</link>
        <guid isPermaLink="true">http://localhost:4000/2020/07/25/Learning-Python-Syllabus.html</guid>
        
        
      </item>
    
      <item>
        <title>The Accessibilty of A Story</title>
        <description>&lt;p&gt;I meant to post this blog post during my fall semester but I just didn’t get
around to finishing it then. This idea was something I was introduced to during 
a creative writing class I took in college. What makes a story accessible?
First of all how would you define accessibility in regards to a story? 
I’d say it’s the capability for a reader to dive into a story with as little
something I’ve thought about for projects that typically
involved me typing code behind a computer. I had never
really considered how accessible stories were to there
audience. What determines a story’s accessibility? 
&lt;br /&gt;&lt;br /&gt;
That lecture we discussed a book that we had been reading in
class. The story within this book sometimes felt
incomprehensible. I didn’t know before reading but found out
during lecture, you needed to have some background
in Greek Mythology to better understand the story.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 May 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2020/05/03/The-Accessibility-Of-A-Story.html</link>
        <guid isPermaLink="true">http://localhost:4000/2020/05/03/The-Accessibility-Of-A-Story.html</guid>
        
        
      </item>
    
      <item>
        <title>What's up 2020</title>
        <description>&lt;h2 style=&quot;text-align:center;&quot;&gt;&lt;em&gt;What's up 2020!&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;
I'm a little late but I wanted to have a blog post to start off the new
year and recap some things I'm grateful for in 2019. Also, maybe (just maybe) 
this blog post can be a way to be publicly accountable for my yearly goals. 
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;
2019 was an interesting year. A year of new experiences and while I 
thoroughly enjoyed those times, I'm quite looking forward to the
goals I'm setting for myself this year. I will admit I have never really
been into setting new years resolutions for myself. I had always assumed
people that did such things never really committed to what they set out for
themselves. However, I want to push myself and grow in this next year, so
when it came to making concrete S.M.A.R.T Goals, I thought why not. Also
quick note: these goals are inspired by &lt;a href=&quot;https://katmh.com&quot;&gt;Kat
Huang&lt;/a&gt; and &lt;a href=&quot;https://thesephist.com&quot;&gt;Linus&lt;/a&gt;.
&lt;br /&gt;&lt;br /&gt;
Below are some things I'm thankful for in 2019.
&lt;/p&gt;
&lt;h3&gt;2019 Recap&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
I went to InterVarsity's Urbana Conference in St Louis (The conference actually started Dec 27th and went into New Years so we're gonna count it).
&lt;/li&gt;

&lt;br /&gt;

&lt;li&gt;
I played intramural basketball for the first time. I also realized I really should have picked up intramurals earlier on.
&lt;/li&gt;

&lt;br /&gt;

&lt;li&gt;
I got really into volleyball and am still very interested in the sport (still trying to learn how to jump serve).
&lt;/li&gt;

&lt;br /&gt;

&lt;li&gt;
I helped choose SBU InterVarsity's next leadership team.
&lt;/li&gt;

&lt;br /&gt;

&lt;li&gt;
I completed a capstone course.
&lt;/li&gt;

&lt;br /&gt;

&lt;li&gt;
I went on a roadtrip to Rhode Island with friends.
&lt;/li&gt;

&lt;br /&gt;

&lt;li&gt;
I joined a nonprofit as a software developer.
&lt;/li&gt;

&lt;br /&gt;

&lt;li&gt;
I helped plan and co-host a friendsgiving dinner for the first time
(which took a lot more preparation than I expected).
&lt;/li&gt;

&lt;br /&gt;

&lt;li&gt;
I wrote (Act 1 of) my first ever TV Script.
&lt;/li&gt;

&lt;br /&gt;

&lt;li&gt;
I graduated &lt;i&gt;Yay!&lt;/i&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br /&gt;
And these are my goals for 2020.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;
&lt;h3&gt;2020 Goals&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Read 20 books for 2020.&lt;/li&gt; &lt;br /&gt;
&lt;li&gt;Publish 20 blog posts.&lt;/li&gt; &lt;br /&gt;
&lt;li&gt;Take 1000 photos.&lt;/li&gt; &lt;br /&gt;
&lt;li&gt;Learn how to cook and make 3-5 meals for friends and family.&lt;/li&gt; &lt;br /&gt;
&lt;li&gt;Compete in a local American Ninja Warrior competition.&lt;/li&gt; &lt;br /&gt;
&lt;li&gt;Run a Spartan Race.&lt;/li&gt; &lt;br /&gt;
&lt;li&gt;Go on 3-5 roadtrips.&lt;/li&gt; &lt;br /&gt;
&lt;li&gt;Build one substantial software project with friends that gains &amp;gt;= 500 users (numbers of users is negotiable).&lt;/li&gt; &lt;br /&gt;
&lt;li&gt;Build 2-3 other (software) projects that I want to build.&lt;/li&gt; &lt;br /&gt;
&lt;li&gt;Draw 5 pictures that I really enjoy.&lt;/li&gt; &lt;br /&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;p&gt;
These goals are what I'd like to achieve but they're pretty fluid.
So they may change over time. I'm most excited about building software people
will actually use. Up until now the most interesting things I've done have just been scripts I'd write for myself.
I've started to brainstorm some ideas with friends but nothing
super concrete as of yet. More on that to come. When I first wrote these 
goals down they did look intimidating but I'm hoping that feeling will
become the drive to try some new things this year. 
Also if I get around to it I will try to post about rough plans I have outlined in Notion to accomplish these goals.
&lt;/p&gt;
&lt;p&gt;
Oh one other thing I wanted to mention about some upcoming blog posts for
this site. Though my current blog posts (excluding this one) are from 2019
I have some posts that I had written in previous years stored on my
computer. I have posts on my experience at the previous Urbana conference
and my day to day as a college student among others. I'm hoping to reupload
these posts to my current site with their original date.
Also keep a look out for my next upcoming blog post on a quick project I
made for my cousin the other day (It involves Pokemon and Golang).
&lt;br /&gt;&lt;br /&gt;
Happy New Year y'all! Hope y'all had a rested holiday season!
&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2020/01/22/Whats-Up-2020.html</link>
        <guid isPermaLink="true">http://localhost:4000/2020/01/22/Whats-Up-2020.html</guid>
        
        
      </item>
    
      <item>
        <title>Make A Pokedex in Golang</title>
        <description>&lt;h1&gt;&lt;i&gt;Coming Soon!&lt;/i&gt;&lt;/h1&gt;
</description>
        <pubDate>Wed, 22 Jan 2020 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2020/01/22/Make-A-Pokedex-In-Golang.html</link>
        <guid isPermaLink="true">http://localhost:4000/2020/01/22/Make-A-Pokedex-In-Golang.html</guid>
        
        
      </item>
    
      <item>
        <title>Advent Of Code 2019 And Other Things</title>
        <description>&lt;p&gt;So we’re more than halfway through December and Advent of Code is well underway. For those are unfamiliar of what Advent of code is you can check out the site &lt;a href=&quot;https://adventofcode.com&quot;&gt;here&lt;/a&gt;. I have started to give a crack at some of the problems. Unfortunately I haven’t made as much progress on them as I’d like (I’ve only gotten around to the first two problems) but I’m planning to catch up on them. Just things have been a little crazy with finishing up this semester and sending out applications. So soon I’ll hopefully be able to catch up with everyone else who’s participating in AOC this year. 
&lt;br /&gt;&lt;br /&gt;
However I wanted to encourage everyone who has currently been working through advent of code and let y’all know about some other advent themed software content I found on the internet.&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;https://bekk.christmas/&quot;&gt;Bekk Christmas&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This website is a bit less interactive learning but still just as cool. The creator wanted to write an article each day leading up to Christmas in varying computer science topics. The author has wrote about topics ranging from security and functional programming to machine learning and open source. Definitely cool site you should check out if you want to learn something new. 
&lt;br /&gt;&lt;br /&gt;
Also quick side note, I’ve been wanting to get a deeper understanding of functional programming for a while now. Particularly in Haskell and OCaml. Maybe I’ll get my feet wet with some of the content on the site. 
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://chrispenner.ca/posts/advent-of-optics-01&quot;&gt;Advent of Optics&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The author behind this site provides a few Advent of Code like challenges related to optics. He uses Haskell in his implementations but I’m sure you could convert some of the solutions into another language if you wanted to. It’s another nice set of puzzles that could also let you learn about a new field. Worth checking out.
&lt;br /&gt;&lt;br /&gt;
I hope y’all are having a good Advent season and for those who wanted to get into the season of Advent I leave you with this article.
&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.nytimes.com/2019/11/30/opinion/sunday/christmas-season-advent-celebration.html&quot;&gt;Want to Get Into the Christmas Spirit? Face the Darkness by Tish Harrison Warren&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;
See y’all in the next post!&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Dec 2019 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2019/12/17/19-Advent-Of-Code-2019-And-Other-Things.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/12/17/19-Advent-Of-Code-2019-And-Other-Things.html</guid>
        
        
      </item>
    
      <item>
        <title>Dear Impact Labs Fellowship</title>
        <description>&lt;p&gt;Dear Impact Labs Fellowship,
&lt;br /&gt;&lt;br /&gt;
&lt;!-- Make first line less reptitive   --&gt;
I wanted to write this letter to talk about something I
didn’t get to talk about in my application (mainly because I
was afraid the story would be a bit too long for the form).
I wanted to write about the time I went with my university’s
InterVarsity fellowship for an event we called Feed500.
&lt;br /&gt;&lt;br /&gt;
For this event we wanted to sit down and have lunch with people
looking for a meal in Manhattan. We took an 8am LIRR train from
Stony Brook to Penn station with about 25 lunches packed
with Bagels, Granola bars, an apple and bottles of Sunny D
and water. Once we reached the station we broke off into
groups of 3 to see who we could hand out lunches to. My
group left the station and sat down with two to three people
before we came to the outskirts of Central Park. Once we
arrived at that intersection we sat down with another man
who was seated right outside of the building next to us.
Let’s call this man Micah for simplicity’s sake. Prior to our
lunch with Micah my group had some difficulty in our
previous lunches with the homeless. Many were appreciative
of the lunches we provided but didn’t feel as comfortable
with us sitting down to share a meal with them. Micah seemed
more open to us sitting down with him but at the same time I
wouldn’t say he was in high spirits when we initially sat
down with him. So my group took a seat on the pavement and
handed out the food as we all began to eat.
&lt;br /&gt;&lt;br /&gt;
At first it was just our group who did most of the talking.
We told Micah about what we did as students, why we were on
this trip and about some of the activities we did in our
fellowship. After some time Micah started to open up a bit
more to us.
&lt;br /&gt;&lt;br /&gt;
I wasn’t really sure what to expect from his story. I had
some preconceived notions coming in but they didn’t line up
with what I heard from Micah. As a freshman CS student, my
ears perked up when he told us he used to be a web designer
in New Jersey. That was something I didn’t expect to hear.
He had worked there and own his own apartment until he had
got laid off at his job. Times were tough he told us. At the
time he only had so much money to pay for a month or two
more of rent. After that he would be evicted immediately
from his apartment. Usually in times like this people can
fall back on the people close to them, their family and
friends. However, Micah told us he wasn’t close to his
family at that time. When he told his siblings about what
was happening to him they didn’t seem to care. He didn’t
make much a comment about friends when he was recounting
that time. So he didn’t really have a place to go to when he
couldn’t get a job. He told us that moving from New Jersey
to New York City was a wise move when he didn’t have much of
a place to go to. This way he would be able to ask for money
when he can and be able to provide for himself with at least
the bare minimum.
&lt;br /&gt;&lt;br /&gt;
That’s how we ended up meeting Micah on the corner of that
building that day. As we continued talking with Micah I
wondered if this was really all we could do for him. Was all
we could do just provide a single meal for him? At the time
I couldn’t really find an answer to that question. I was
just a freshman in college who had little to no experience
contemplating these issues. What could I possibly do to help
him in this situation. 
&lt;br /&gt;&lt;br /&gt;
Soon we finished up lunch and it was time for us to keep
moving and handing out food throughout the city. As we left
I just suggested Micah to look into freelancing sites since
he had skills that could help him land a job. I gave some
examples of freelancing sites he could check out and he
thanked me for the tips as we left to continue with our
lunches through the city. That was the last time I saw
Micah but that wasn’t the last time I thought about him. 
Even now I ask myself “Was there anything else we could have
done?”
&lt;br /&gt;&lt;br /&gt;
Micah’s problems may be his own but his circumstances are
certainly not unique. It was a humbling moment to realize
that a single bagged lunch won’t fix this greater issue of
homelessness. I do believe a single meal can go a long way
but a larger solution will be needed to fix this macroscopic
issue. Back then as a freshman in computer science, my understanding of how I
could help with these larger issues was much more limited.
Now that I’ve gotten the chance to learn so much more and
broadened my worldview I’m better equipped to start tackling
these kind of issues. Since then there have been other
issues that have come to mind in addition to issues of
homelessness and poverty. Issues like agriculture scaling,
aiding science researchers, and community development to
name a few.
&lt;br /&gt;&lt;br /&gt;
However, even with all of these issues only part of me feels 
better equipped. I know I’m more able
to pick up the technologies needed to build these solutions
but I still have so much to learn when it comes to building
solutions for these kinds of issues. How do I know that the
way I design my projects will be able to aid the people I
would like to help? If I don’t make those decisions
carefully, then these solutions may just provide a facade of
help with very little actual impact. That’s what I hope to
learn if being admitted to the fellowship. How to go about
starting these larger projects while keeping the design
focused upon the population of people I’m aiming to help.
How to make the project more than just another software
engineering endeavor but something that has real impact for
another individual. Getting the chance to collaborate with
other students and world changers that share a vision to
work towards developing that kind of change. To also get to
hear from leaders and founders that have walked through this
process before. To hear about the struggles they
encountered along the way and how they were able to combat
them while trying to fix these issues. Then I believe I can
say with more certainty that I will know the proper way to
go about tackling these issues.
&lt;br /&gt;&lt;br /&gt;
So thank you for reading my open blog post to you Impact
Labs Team. I appreciate that you were able to hear me out 
through my writing. I hope I got to showcase why I wanted to
apply to this fellowship and if accepted, what I hope to
learn from it. Thank you again and look forward to hearing
from you soon!&lt;/p&gt;

</description>
        <pubDate>Fri, 18 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2019/10/18/Dear-Impact-Labs-Fellowship.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/18/Dear-Impact-Labs-Fellowship.html</guid>
        
        
      </item>
    
      <item>
        <title>Building A Classifier For Trending Videos</title>
        <description>&lt;p&gt;&lt;em&gt;Quick Disclaimer: This is my first technical blog post
so bear with me as I learn how to write technical blog
posts.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;Quick Background&lt;/h1&gt;
&lt;p&gt;The YouTube algorithm is a mysterious bit of software that many users often ponder over
&lt;em&gt;“Why did this up in my recommended? Why did this pop up
on my feed?”&lt;/em&gt;. In this blog post we won’t be able to
replicate the YouTube algorithm but we may be able to mimic
how YouTube picks it’s trending videos. 
So I created this project with a two friends of mine and it
was our first main venture into data science and machine
learning but something we did happen to learn a lot from. 
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1&gt;Getting the Data&lt;/h1&gt;
&lt;p&gt;So first we need to have a dataset to work with. There are
two ways we can go about this.&lt;/p&gt;
&lt;ol&gt;
    &lt;li&gt;Find an existing dataset&lt;/li&gt;
    &lt;li&gt;Build our dataset&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Among my friends and I we actually decided to do both. We
had found an existing online at Kaggle. &lt;a href=&quot;https://www.kaggle.com/datasnaek/youtube-new&quot;&gt; Here is
one existing dataset that could be used.&lt;/a&gt; Similar
datasets could be found online at &lt;a href=&quot;https://www.kaggle.com/datasets&quot;&gt;
Kaggle&lt;/a&gt;.
&lt;br /&gt;&lt;br /&gt;
To get a larger sized dataset we need to scrape YouTube for
trending videos. When I did this with friends we were able
to scrape the Popular on YouTube channel for video id’s of
those trending videos. Now I believe it’s a little harder to
scrape the video page on that channel. However, you should
be able to scrape the videos on the trending tab for the
video id’s. Once you have the list of video id’s you can use
&lt;a href=&quot;https://developers.google.com/youtube/v3&quot;&gt;
YouTube’s Data API&lt;/a&gt; to query for data about each individual
video using it’s video id. Here’s a code snippet of how to
query the video data.
&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;api_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;insert-your-api-key-here&amp;gt;'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getVideoStats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dataframe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'location-to-csv-with-video-ids'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listofIds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataframe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'URL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dropna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;video_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listofIds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# just pick one id for the time being
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;searchUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://www.googleapis.com/youtube/v3/videos?id='&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;video_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;amp;key='&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api_key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;amp;part=statistics,snippet'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;searchUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'latin-1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jsoninfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsoninfo&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;
That snippet describes how to retrieve data about a single
YouTube video. You can run the api call in a loop in order
to get data for all of the youtube videos. One small tip to
speed up the process would be to continually append video
id’s to a single string. Then pass in that string as the
video id and the api would make one request for the amount
of video id’s you passed in (the max being 50 id’s per
request). You’ll want to write the data to a csv file so
that it can be read into a pandas dataframe when you need to
process it. After you’ve gotten all of the video data for
trending videos you need to repeat the process for
nontrending videos. One simple way to do that would be to go
to do different YouTube channels and scrape that channel for
videos. However, you should be careful about what kinds of
videos you’re scraping. For instance many trending videos
will have higher view counts. So if you’re nontrending
dataset consists of videos from really small channels that
have around 1k views each, then that would skew your
dataset. So pick YouTube channels with reasonable metrics
when it comes to their videos.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1&gt;Creating and training the model&lt;/h1&gt;
&lt;p&gt;Once your file has its all of its entries of video data. You
can start going about building your model for training. My
friends and I ended up using the tensorflow framework to
build our neural network. The reason being was that it was
quite easy to get a model up and working relatively quickly.
&lt;br /&gt;&lt;br /&gt;
We ended up defining our model as so.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keras&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sequential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kernel_regularizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;regularizers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kernel_regularizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;regularizers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kernel_regularizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;regularizers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keras&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dense&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;softmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AdamOptimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sparse_categorical_crossentropy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'accuracy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;early_stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; 
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://www.youtube.come/feed/trending'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pageSoup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'html.parser'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;aTags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageSoup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;newlist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aTags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'watch'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aTags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'href'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;newlist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aTags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# this is pretty inefficient but for the purpose of what
# we're doing it's okay
# now you can access each url by looping through newlist and accessing
# newlist[i]['href']&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;standardizeData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fullSubset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;matrixData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fullSubset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;matrixData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matrixData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;astype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'float32'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;matrixData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrixData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;matrixData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matrixData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trendingSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'../data/new-datasets/trending_dataset.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nontrendingSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'../data/new-datasets/nontrending_dataset.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;trendingDf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trendingSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nontrendingDf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nontrendingSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;subsetTrending&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trendingDf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;subsetNontrending&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nontrendingDf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subsetTrending&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;    

&lt;span class=&quot;c1&quot;&gt;#Test dataset
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trendingTestSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trendingDf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tags'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'trending'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'duration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'video_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'video_title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nontrendingTestSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nontrendingDf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tags'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'trending'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'duration'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'video_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'video_title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;totaldf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trendingTestSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nontrendingTestSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])))))))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nonTrendingTrainSet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nontrendingDf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;scaleMatrixData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;standardizeData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subsetTrending&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subsetNontrending&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scaleMatrixData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trendingLabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epochs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;videoId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getOneVideoStats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;videoId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;apiKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;prediction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;video&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sun, 13 Oct 2019 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2019/10/13/Building-A-Classifier-For-Trending-Videos.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/10/13/Building-A-Classifier-For-Trending-Videos.html</guid>
        
        
      </item>
    
      <item>
        <title>Recreating My Personal Website</title>
        <description>&lt;h2&gt;Taking A Look At My Past Sites&lt;/h2&gt;

&lt;p&gt;So this is about the third time I’ve worked on creating a
personal website. The first time I created my website was in
my freshman year of college as a means of trying to create a
portfolio and trying to test some coding skill. This is
an image of what the site initially looked like.&lt;/p&gt;
&lt;div&gt;
   &lt;img src=&quot;../../../assets/imgs/website1.PNG&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;From this image the site doesn’t look too bad. However, the
rest of the site was not designed well. It had colored
backgrounds that loosely followed the color scheme set forth
by the initial background image. When designing my first
site I really wanted the first image to be the backdrop for the
site but didn’t know how to setup the design for the rest of
the site. I still don’t really know how to design but I
would like to think I’ve gotten slightly better since
freshman year. Or at the very least have better judgment
when it comes to design choices. Except for the use of
bootstrap I wanted to code this iteration of my site from
the ground up. At the time I was hoping this would be a good
side project to teach me more about web design but to be
honest I didn’t really know much about design practices.
Frankly, I still don’t.&lt;/p&gt;

&lt;p&gt;But let’s take a look at what the second iteration of this
site looks like to see the progression.&lt;/p&gt;
&lt;div&gt;
   &lt;img src=&quot;../../../assets/imgs/website2.PNG&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;This site is a bit different than the first but there are a
few shared aspects. The first commonality between the sites
is the horizontal navbar on the top of both sites. The
second is that both of my sites have a welcome banner for
whoever may be visiting my site. The banner in the v2 of my site makes me cringe
but I also felt it was needed for a personal website at the time.
After going through two iterations for this site and looking
at dozens and dozens of other personal websites on the
Internet I think I’ve started to learn some of the design
aspects I appreciate in personal websites. First, I
appreciate if a website has a minimal theme. In my first
website I believe I stuck to that thought with just a
minimal navbar and background picture as the center piece.
No flashy animations, no extremely vibrant colors, just a
simple image with navigation for the site (with a few other
div’s that hold some content). So I think that was something
I wanted to have in my latest iteration of the site.
However, I still had one issue that was holding me back, I
still didn’t really know much about design. Over time though
I finally decided I switch over to using a static site
generator (jekyll) and use a pre-built theme, instead of
trying to design one myself. That’s how I finally came to
using jekyll along with the 
&lt;a href=&quot;https://github.com/niklasbuschmann/contrast&quot;&gt; contrast theme&lt;/a&gt;.
I edited a few things myself, just small things like
changing the color of the footer and adding a reading time
for each of my blog posts. So slowly this site started to
morph into my own, reflecting my taste and personality.
After a while it finally feels like I can settle on a site
that I’m comfortable with.
&lt;br /&gt;&lt;br /&gt;
At least that’s what I had thought at the time. But even
after switching over from static html/css to a static site
generator, I eventually felt like I wanted a new theme.
After looking over many personal websites online and drawing
inspiration from particularly two (which I’ve given credit
to on my site) I settled on the gravity theme with a bit of
customization. 
&lt;br /&gt;&lt;br /&gt;
This theme is definitely closer to what I would like out of
this site but there is still more tinkering I can do with
it. Hopefully I will be able to make some more updates soon.
I’m planning to make one of the first updates to this site
be a dark theme (one that can be toggled).&lt;/p&gt;

&lt;h2&gt;The Blog&lt;/h2&gt;
&lt;p&gt;So now that I finally have a site I’m happy that I can start
a blog. That was one of my initial motivations to create a
personal website but something I’ve only been able to
achieve with this latest iteration. However, now that I
finally have a blog where I can host my thoughts, comes the
question. What exactly am I going to write about? This
question I don’t fully have answered but I do have a few
ideas. I know among the things I want to write about I want
to reflect on some of my past experiences. Like this past
winter I went to the Urbana Missions conference, so I’m
planning to write a blog post on that just to recap most
things that happened day to day. I would also like to
include a little technical writing on this page. For
instance this past semester I worked in a group for a data
science class to build a classifier to predict trending
YouTube videos. A lot of effort went into that project and I
think writing a blog post breaking down the process would be
a nice way to document my own experiences with machine
learning and my thoughts going into that project. Also I was
hoping to throw in a few creative writing pieces on here
every now and then. Whether those pieces be ones I’ve
written for school or just written in my spare time. But
that’s really all I have planned for this site at the
moment. I’m sure I’ll have more ideas of what to write later
down the line but for the time being I’m a little unsure of
what exactly my future blog posts will be. Maybe that’s just
something comes with writing on a blog. Not knowing what
you’re gonna write about next. Well hopefully it’ll also be
something I’ll get used to.
&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;edit: I initially wrote this post in back in
January 2019 but am only publishing it now (9/14/2019). At
the time I was still on the second iteration of my site.
More recently I have moved to this third version which has
given me a bit more customization using the Gravity theme&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Jan 2019 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2019/01/09/Recreating-My-Personal-Website.html</link>
        <guid isPermaLink="true">http://localhost:4000/2019/01/09/Recreating-My-Personal-Website.html</guid>
        
        
      </item>
    
  </channel>
</rss>
